@inject AidImpactTraining.Models.FormattingService Format
@model IEnumerable<AidImpactTraining.Models.Post>
@{ Layout = "_Layout"; }

<section class="cta-section theme-bg-light py-5">
    <div class="container text-center single-col-max-width">
        <h2 class="heading">Mon Blog</h2>
        <div class="intro">
            <p>Retrouvez mes 5 derniers articles réalisés via ASP.NET Core MVC</p>
            <p>Date actuelle : @Format.AsReadableDate(DateTime.Now)</p>
        </div>

        <div>
            <a class="btn btn-primary" href="@Url.Action("Create", "Blog")">Créer un article</a>
        </div>

    </div><!--//container-->
</section>

<div class="container">
    <section>
        <div class="blog-posts">
            @foreach (var post in Model)
            {
                @*The posts markup are the same in the index and post page, so we use reusable components*@ 
                // The second parameter helps us to replace the model by the post
                @await Html.PartialAsync("_Post", post)
            }
        </div>
        @if (ViewBag.HasPreviousPage)
        {
            <a class="btn btn-outline-secondary float-right mt-3 mb-3" href="@Url.Action("Index", "Blog", new { page = ViewBag.PreviousPage })">
                Page précédente
            </a>
        }
        else
        {
            <a class="btn btn-outline-secondary float-right mt-3 mb-3" href="@Url.Action("Index", "Blog", new { page = ViewBag.NextPage })">
                Page suivante
            </a>
        }
        <div class="container"><hr></div>
    </section>
</div>